import unittest


class TestUnit(unittest.TestCase):

    def test_rotation(self):
        import numpy as np
        import functions as f
        axis = np.array([0, 0, 1])
        x = np.array([1, 0, 0])
        angle = 45
        q = f.rotation_to_quaternion(axis, angle)
        f.rotate(x, q)

    def test_change_in_momentum(self):
        import numpy as np
        
        import functions as f
        # Tests the change in momentum code.
        # Uses the beamline as the x-axis and the vertical as the z axis.
        # For testing purposes assumes the axis of functions is the y axis and
        #     the diffracted beam is the x-z plane.

        Y_AXIS = np.array([0, -1.0, 0])  # The negative y axis is the axis of
        #                                     functions for the momentum.
        ENERGY = 8
        momentum_in = np.array([ENERGY, 0, 0])
        two_theta = 45
        
        f.change_in_momentum(momentum_in, Y_AXIS, two_theta)
        
if __name__ == '__main__':
    unittest.main()