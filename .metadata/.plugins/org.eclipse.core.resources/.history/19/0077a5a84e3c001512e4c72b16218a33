import peak_finder as fp
import scisoftpy as dnp
import scitbx.math as scm
from scitbx.matrix import col as Vector
from scitbx.matrix import sqr as Rotator
import functions as f
import Crystal as c

data_dir='/dls/i16/data/2015/cm12169-3/'
path_index = 527341

print fp.find_peaks('/dls/i16/data/2015/cm12169-3/', 527341, 527358, 1,False, False, 'roi7_sum')[0]
cif = 'HoFe2_icsd_103499.cif'
dat = dnp.io.load(data_dir+'{0:.0f}.dat'.format(path_index),
                              warn=False)

h = 6.62606957*10**-34
light_speed = 299792458
beam_energy = 8
beam_energy_J = (beam_energy*1000)*1.6*10**-19
print beam_energy_J
wave_length = ((h*light_speed)/beam_energy_J)*10**10  #Angstrums

print wave_length
radius = 1/wave_length

print dat.metadata['delta']


mycrys = c.Crystal()
mycrys.load_cif(cif)
l = f.group_reflections(mycrys, print_list=False)
vectors = f.momentum_transfer_vectors(l[10], mycrys)
print vectors[1].length()


